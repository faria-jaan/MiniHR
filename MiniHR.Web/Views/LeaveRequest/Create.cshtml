@model MiniHR.Application.DTOs.LeaveRequestDto

@{
    ViewBag.Title = "Apply for Leave";
    var balance = ViewBag.LeaveBalance as MiniHR.Application.DTOs.LeaveBalanceDto;
    var errors = ViewBag.DebugModelErrors as IDictionary<string, string[]>
    ;

    }
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Create Leave Request</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    </head>

    <div class="container mt-5" style="max-width: 700px;">
        <h2 class="mb-4 text-center">Apply for Leave</h2>

        @if (errors != null)
        {
        <div asp-validation-summary="ModelOnly" class="alert alert-danger">

            <div class="alert alert-danger">
                <h5>Validation Errors:</h5>
                <ul class="mb-0">
                    @foreach (var kv in errors)
                    {
                    <li>
                        <strong>@kv.Key:</strong> @string.Join(", ", kv.Value)
                    </li>
                    }
                </ul>
            </div>

        </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
        <div class="alert  alert-danger">
            @TempData["ErrorMessage"]
        </div>

        }
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-primary text-white">
                <strong>Your Current Leave Balance</strong>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <p><strong>Annual:</strong> @balance?.AnnualLeave</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Sick:</strong> @balance?.SickLeave</p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Unpaid:</strong> @balance?.UnpaidLeave</p>
                    </div>
                </div>
            </div>
        </div>

        <form asp-action="Create" method="post" class="border rounded p-4 bg-light shadow-sm">
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label asp-for="LeaveType" class="form-label">Leave Type </label>
                <select asp-for="LeaveType" class="form-control" name="LeaveType">
                    <option value="">-- Select Leave Type --</option>
                    <option>Annual</option>
                    <option>Sick</option>
                    <option>Unpaid</option>
                </select>
                <span asp-validation-for="LeaveType" id="LeaveType" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="StartDate" class="form-label">Start Date</label>
                <input asp-for="StartDate" type="date" name="StartDate" id="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="EndDate" class="form-label">End Date</label>
                <input asp-for="EndDate" type="date" name="EndDate" id="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-success">Submit Request</button>
                @*<a asp-action="Index" class="btn btn-secondary">Cancel</a>
                <a asp-action="Dashboard" asp-controller="Home" class="btn btn-secondary">Cancel</a>*@

            </div>
        </form>
    </div>


    @section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    @*
    <script>
        $(document).ready(function () {
            alert("dfdfdf");
            $('form').on('submit', function (e) {
                var leaveType = $('#LeaveType').val();
                var startDate = new Date($('#StartDate').val());
                var endDate = new Date($('#EndDate').val());

                if (!leaveType || isNaN(startDate) || isNaN(endDate)) {
                    return; // skip validation if fields are incomplete
                }

                var dayDifference = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;
                if (dayDifference < 1) {
                    alert('End Date must be same or after Start Date.');
                    e.preventDefault();
                    return;
                }

                // Balance from Razor View
                var annual = parseInt('@(balance?.AnnualLeave ?? 0)');
                var sick = parseInt('@(balance?.SickLeave ?? 0)');
                var unpaid = parseInt('@(balance?.UnpaidLeave ?? 0)');

                var isValid = true;

                switch (leaveType) {
                    case 'Annual':
                        if (dayDifference > annual) {
                            alert('You do not have enough Annual leave balance.');
                            isValid = false;
                        }
                        break;
                    case 'Sick':
                        if (dayDifference > sick) {
                            alert('You do not have enough Sick leave balance.');
                            isValid = false;
                        }
                        break;
                    case 'Unpaid':
                        if (dayDifference > unpaid) {
                            alert('You do not have enough Unpaid leave balance.');
                            isValid = false;
                        }
                        break;
                }

                if (!isValid) {
                    e.preventDefault(); // prevent form submission
                }
            });
        });
    </script>*@
    }
